{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IMADEV\\\\Documents\\\\umleditorvf\\\\src\\\\components\\\\UIComponents\\\\CanvasArea.js\",\n  _s = $RefreshSig$();\n/**\n * CanvasArea Component\n * -------------------------------------\n * This component manages the main diagram area where Classes, Relations, and Groups are displayed.\n * It includes toolbar actions for adding Classes, Relations, Groups, toggling Dark Mode, zoom controls, and generating code.\n *\n * This file:\n * - Retrieves classes, relations, and groups from Redux store\n * - Provides form dialogs (ClassForm, RelationForm, GroupForm)\n * - Handles all create/update actions for classes, relations, and groups\n * - Implements zoom in/out, toggling theme, and code generation\n */\n\nimport React, { useState, forwardRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport DraggableClass from \"./DraggableClass\";\nimport ClassForm from \"./ClassForm\";\nimport RelationForm from \"./RelationForm\";\nimport GroupForm from \"./GroupForm\";\nimport Relation from \"./Relation\";\nimport Group from \"./Group\";\nimport { addClass, deleteClass, updateClass, updateClassPosition, addRelation, deleteRelation, updateRelation, addGroup, removeGroup, updateGroup, undo, redo } from \"../../redux/editorSlice\";\nimport { Box, AppBar, Toolbar, Typography, IconButton, Tooltip, Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\nimport ZoomInIcon from \"@mui/icons-material/ZoomIn\";\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\nimport CodeIcon from \"@mui/icons-material/Code\";\nimport { generateCode } from '../../utils/codeGenerator';\nimport EditorToolbar from \"./EditorToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasArea = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(() => {\n  _s();\n  // Redux states\n  const classes = useSelector(state => state.editor.classes);\n  const relations = useSelector(state => state.editor.relations);\n  const groups = useSelector(state => state.editor.groups);\n  const past = useSelector(state => state.editor.past);\n  const future = useSelector(state => state.editor.future);\n  const dispatch = useDispatch();\n\n  // States for class form\n  const [formOpen, setFormOpen] = useState(false);\n  const [editingClass, setEditingClass] = useState(null);\n\n  // States for relation form\n  const [relationFormOpen, setRelationFormOpen] = useState(false);\n  const [editingRelation, setEditingRelation] = useState(null);\n\n  // States for group form\n  const [groupFormOpen, setGroupFormOpen] = useState(false);\n  const [editingGroup, setEditingGroup] = useState(null);\n\n  // States for generated code dialog\n  const [codeDialogOpen, setCodeDialogOpen] = useState(false);\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n\n  // State for Dark Mode\n  const [darkMode, setDarkMode] = useState(false);\n\n  // State for zoom level\n  const [zoom, setZoom] = useState(1);\n\n  // State for selected language\n  const [selectedLanguage, setSelectedLanguage] = useState('java');\n\n  /**\n   * Toggles dark mode on/off\n   */\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  /**\n   * Zoom in, limiting maximum to 3x.\n   */\n  const handleZoomIn = () => {\n    setZoom(prevZoom => Math.min(prevZoom + 0.2, 3));\n  };\n\n  /**\n   * Zoom out, limiting minimum to 0.5x.\n   */\n  const handleZoomOut = () => {\n    setZoom(prevZoom => Math.max(prevZoom - 0.2, 0.5));\n  };\n\n  /**\n   * Handles opening the form to add a new class.\n   */\n  const handleAddClass = () => {\n    setEditingClass(null);\n    setFormOpen(true);\n  };\n\n  /**\n   * Handles editing an existing class by opening the form pre-filled.\n   */\n  const handleEditClass = cls => {\n    setEditingClass(cls);\n    setFormOpen(true);\n  };\n\n  /**\n   * Saves the updated or newly created class to the Redux store.\n   * @param {Object} updatedClass - Class attributes including name, attributes, methods.\n   */\n  const handleSaveClass = updatedClass => {\n    if (editingClass) {\n      // Update existing class\n      dispatch(updateClass({\n        id: editingClass.id,\n        ...updatedClass\n      }));\n    } else {\n      // Create new class\n      dispatch(addClass({\n        ...updatedClass,\n        id: Date.now().toString(),\n        x: 100,\n        y: 100\n      }));\n    }\n    setFormOpen(false);\n    setEditingClass(null);\n  };\n\n  /**\n   * Handles the drag end event to update a class's position in Redux.\n   * @param {string} id - Class identifier\n   * @param {Object} delta - Difference in x and y from initial position\n   */\n  const handleDragEnd = (id, delta) => {\n    const cls = classes.find(c => c.id === id);\n    if (cls) {\n      dispatch(updateClassPosition({\n        id,\n        x: cls.x + delta.x,\n        y: cls.y + delta.y\n      }));\n    }\n  };\n\n  /**\n   * Opens the form to add a new relation.\n   */\n  const handleAddRelation = () => {\n    setEditingRelation(null);\n    setRelationFormOpen(true);\n  };\n\n  /**\n   * Opens the form to edit an existing relation.\n   */\n  const handleEditRelation = rel => {\n    setEditingRelation(rel);\n    setRelationFormOpen(true);\n  };\n\n  /**\n   * Saves updated or newly created relations to Redux store.\n   */\n  const handleSaveRelation = updatedRelation => {\n    if (editingRelation) {\n      dispatch(updateRelation({\n        id: editingRelation.id,\n        ...updatedRelation\n      }));\n    } else {\n      dispatch(addRelation({\n        ...updatedRelation,\n        id: Date.now().toString()\n      }));\n    }\n    setRelationFormOpen(false);\n    setEditingRelation(null);\n  };\n\n  /**\n   * Opens the form to add a new group.\n   */\n  const handleAddGroup = () => {\n    setEditingGroup(null);\n    setGroupFormOpen(true);\n  };\n\n  /**\n   * Opens the form to edit an existing group.\n   */\n  const handleEditGroup = group => {\n    setEditingGroup(group);\n    setGroupFormOpen(true);\n  };\n\n  /**\n   * Saves updated or newly created groups to Redux store.\n   */\n  const handleSaveGroup = updatedGroup => {\n    if (editingGroup) {\n      dispatch(updateGroup({\n        id: editingGroup.id,\n        ...updatedGroup\n      }));\n    } else {\n      dispatch(addGroup({\n        ...updatedGroup,\n        id: Date.now().toString(),\n        members: [],\n        x: 50,\n        y: 50\n      }));\n    }\n    setGroupFormOpen(false);\n    setEditingGroup(null);\n  };\n\n  /**\n   * Generates Java code (basic skeleton) for all classes in the diagram.\n   * It shows the generated code in a dialog.\n   */\n  const handleGenerateCode = () => {\n    const code = generateCode(classes, relations, selectedLanguage);\n    setGeneratedCode(code);\n    setCodeDialogOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n      darkMode: darkMode,\n      onToggleDarkMode: toggleDarkMode,\n      onZoomIn: handleZoomIn,\n      onZoomOut: handleZoomOut,\n      onAddClass: handleAddClass,\n      onAddRelation: handleAddRelation,\n      onAddGroup: handleAddGroup,\n      onGenerateCode: handleGenerateCode,\n      onUndo: () => dispatch(undo()),\n      onRedo: () => dispatch(redo()),\n      canUndo: past.length > 0,\n      canRedo: future.length > 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        position: \"relative\",\n        backgroundColor: darkMode ? \"#121212\" : \"#f0f0f0\",\n        overflow: \"auto\",\n        height: \"calc(100vh - 48px)\" // Account for toolbar height\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          transform: `scale(${zoom})`,\n          transformOrigin: \"0 0\",\n          transition: \"transform 0.2s ease-in-out\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            pointerEvents: \"none\",\n            zIndex: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n            children: [/*#__PURE__*/_jsxDEV(\"pattern\", {\n              id: \"smallGrid\",\n              width: \"20\",\n              height: \"20\",\n              patternUnits: \"userSpaceOnUse\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M 20 0 L 0 0 0 20\",\n                fill: \"none\",\n                stroke: darkMode ? \"#333\" : \"#eee\",\n                strokeWidth: \"0.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"pattern\", {\n              id: \"grid\",\n              width: \"100\",\n              height: \"100\",\n              patternUnits: \"userSpaceOnUse\",\n              children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                width: \"100\",\n                height: \"100\",\n                fill: \"url(#smallGrid)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M 100 0 L 0 0 0 100\",\n                fill: \"none\",\n                stroke: darkMode ? \"#444\" : \"#e0e0e0\",\n                strokeWidth: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            width: \"100%\",\n            height: \"100%\",\n            fill: \"url(#grid)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            zIndex: 1\n          },\n          children: relations.map(rel => {\n            const sourceClass = classes.find(cls => cls.id === rel.source);\n            const targetClass = classes.find(cls => cls.id === rel.target);\n            if (!sourceClass || !targetClass) return null;\n            return /*#__PURE__*/_jsxDEV(Relation, {\n              source: {\n                x: sourceClass.x,\n                y: sourceClass.y\n              },\n              target: {\n                x: targetClass.x,\n                y: targetClass.y\n              },\n              type: rel.type,\n              sourceCardinality: rel.sourceCardinality,\n              targetCardinality: rel.targetCardinality,\n              classWidth: 200,\n              classHeight: 100\n            }, rel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            zIndex: 2\n          },\n          children: classes.map(cls => /*#__PURE__*/_jsxDEV(DraggableClass, {\n            id: cls.id,\n            name: cls.name,\n            x: cls.x,\n            y: cls.y,\n            attributes: cls.attributes,\n            methods: cls.methods,\n            deleteClass: id => dispatch(deleteClass(id)),\n            onEdit: () => handleEditClass(cls),\n            onDragEnd: delta => handleDragEnd(cls.id, delta)\n          }, cls.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClassForm, {\n      open: formOpen,\n      handleClose: () => {\n        setFormOpen(false);\n        setEditingClass(null);\n      },\n      handleSave: handleSaveClass,\n      initialData: editingClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RelationForm, {\n      open: relationFormOpen,\n      handleClose: () => {\n        setRelationFormOpen(false);\n        setEditingRelation(null);\n      },\n      handleSave: handleSaveRelation,\n      initialData: editingRelation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GroupForm, {\n      open: groupFormOpen,\n      handleClose: () => {\n        setGroupFormOpen(false);\n        setEditingGroup(null);\n      },\n      handleSave: handleSaveGroup,\n      initialData: editingGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: codeDialogOpen,\n      onClose: () => setCodeDialogOpen(false),\n      fullWidth: true,\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Generated Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: \"Language\",\n            value: selectedLanguage,\n            onChange: e => {\n              setSelectedLanguage(e.target.value);\n              const newCode = generateCode(classes, relations, e.target.value);\n              setGeneratedCode(newCode);\n            },\n            fullWidth: true,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"php\",\n              children: \"PHP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          fullWidth: true,\n          minRows: 20,\n          variant: \"outlined\",\n          value: generatedCode,\n          InputProps: {\n            readOnly: true,\n            style: {\n              fontFamily: 'monospace'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            navigator.clipboard.writeText(generatedCode);\n            alert('Code copied to clipboard!');\n          },\n          color: \"primary\",\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCodeDialogOpen(false),\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}, \"YqChUOZ7f0TXFzPFs3uiVezVFjw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n})), \"YqChUOZ7f0TXFzPFs3uiVezVFjw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c2 = CanvasArea;\nexport default CanvasArea;\nvar _c, _c2;\n$RefreshReg$(_c, \"CanvasArea$forwardRef\");\n$RefreshReg$(_c2, \"CanvasArea\");","map":{"version":3,"names":["React","useState","forwardRef","useSelector","useDispatch","DraggableClass","ClassForm","RelationForm","GroupForm","Relation","Group","addClass","deleteClass","updateClass","updateClassPosition","addRelation","deleteRelation","updateRelation","addGroup","removeGroup","updateGroup","undo","redo","Box","AppBar","Toolbar","Typography","IconButton","Tooltip","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","MenuItem","AddIcon","LinkIcon","GroupIcon","Brightness4Icon","Brightness7Icon","ZoomInIcon","ZoomOutIcon","CodeIcon","generateCode","EditorToolbar","jsxDEV","_jsxDEV","CanvasArea","_s","_c","classes","state","editor","relations","groups","past","future","dispatch","formOpen","setFormOpen","editingClass","setEditingClass","relationFormOpen","setRelationFormOpen","editingRelation","setEditingRelation","groupFormOpen","setGroupFormOpen","editingGroup","setEditingGroup","codeDialogOpen","setCodeDialogOpen","generatedCode","setGeneratedCode","darkMode","setDarkMode","zoom","setZoom","selectedLanguage","setSelectedLanguage","toggleDarkMode","handleZoomIn","prevZoom","Math","min","handleZoomOut","max","handleAddClass","handleEditClass","cls","handleSaveClass","updatedClass","id","Date","now","toString","x","y","handleDragEnd","delta","find","c","handleAddRelation","handleEditRelation","rel","handleSaveRelation","updatedRelation","handleAddGroup","handleEditGroup","group","handleSaveGroup","updatedGroup","members","handleGenerateCode","code","sx","height","display","flexDirection","children","onToggleDarkMode","onZoomIn","onZoomOut","onAddClass","onAddRelation","onAddGroup","onGenerateCode","onUndo","onRedo","canUndo","length","canRedo","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","position","backgroundColor","overflow","transform","transformOrigin","transition","width","style","top","left","pointerEvents","zIndex","patternUnits","d","fill","stroke","strokeWidth","map","sourceClass","source","targetClass","target","type","sourceCardinality","targetCardinality","classWidth","classHeight","name","attributes","methods","onEdit","onDragEnd","open","handleClose","handleSave","initialData","onClose","fullWidth","maxWidth","mb","select","label","value","onChange","e","newCode","multiline","minRows","variant","InputProps","readOnly","fontFamily","onClick","navigator","clipboard","writeText","alert","color","_c2","$RefreshReg$"],"sources":["C:/Users/IMADEV/Documents/umleditorvf/src/components/UIComponents/CanvasArea.js"],"sourcesContent":["/**\n * CanvasArea Component\n * -------------------------------------\n * This component manages the main diagram area where Classes, Relations, and Groups are displayed.\n * It includes toolbar actions for adding Classes, Relations, Groups, toggling Dark Mode, zoom controls, and generating code.\n *\n * This file:\n * - Retrieves classes, relations, and groups from Redux store\n * - Provides form dialogs (ClassForm, RelationForm, GroupForm)\n * - Handles all create/update actions for classes, relations, and groups\n * - Implements zoom in/out, toggling theme, and code generation\n */\n\nimport React, { useState, forwardRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport DraggableClass from \"./DraggableClass\";\nimport ClassForm from \"./ClassForm\";\nimport RelationForm from \"./RelationForm\";\nimport GroupForm from \"./GroupForm\";\nimport Relation from \"./Relation\";\nimport Group from \"./Group\";\nimport {\n  addClass,\n  deleteClass,\n  updateClass,\n  updateClassPosition,\n  addRelation,\n  deleteRelation,\n  updateRelation,\n  addGroup,\n  removeGroup,\n  updateGroup,\n  undo,\n  redo,\n} from \"../../redux/editorSlice\";\nimport {\n  Box,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  MenuItem,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\nimport ZoomInIcon from \"@mui/icons-material/ZoomIn\";\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\nimport CodeIcon from \"@mui/icons-material/Code\";\nimport { generateCode } from '../../utils/codeGenerator';\nimport EditorToolbar from \"./EditorToolbar\";\n\nconst CanvasArea = forwardRef(() => {\n  // Redux states\n  const classes = useSelector((state) => state.editor.classes);\n  const relations = useSelector((state) => state.editor.relations);\n  const groups = useSelector((state) => state.editor.groups);\n  const past = useSelector((state) => state.editor.past);\n  const future = useSelector((state) => state.editor.future);\n  const dispatch = useDispatch();\n\n  // States for class form\n  const [formOpen, setFormOpen] = useState(false);\n  const [editingClass, setEditingClass] = useState(null);\n\n  // States for relation form\n  const [relationFormOpen, setRelationFormOpen] = useState(false);\n  const [editingRelation, setEditingRelation] = useState(null);\n\n  // States for group form\n  const [groupFormOpen, setGroupFormOpen] = useState(false);\n  const [editingGroup, setEditingGroup] = useState(null);\n\n  // States for generated code dialog\n  const [codeDialogOpen, setCodeDialogOpen] = useState(false);\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n\n  // State for Dark Mode\n  const [darkMode, setDarkMode] = useState(false);\n\n  // State for zoom level\n  const [zoom, setZoom] = useState(1);\n\n  // State for selected language\n  const [selectedLanguage, setSelectedLanguage] = useState('java');\n\n  /**\n   * Toggles dark mode on/off\n   */\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  /**\n   * Zoom in, limiting maximum to 3x.\n   */\n  const handleZoomIn = () => {\n    setZoom((prevZoom) => Math.min(prevZoom + 0.2, 3));\n  };\n\n  /**\n   * Zoom out, limiting minimum to 0.5x.\n   */\n  const handleZoomOut = () => {\n    setZoom((prevZoom) => Math.max(prevZoom - 0.2, 0.5));\n  };\n\n  /**\n   * Handles opening the form to add a new class.\n   */\n  const handleAddClass = () => {\n    setEditingClass(null);\n    setFormOpen(true);\n  };\n\n  /**\n   * Handles editing an existing class by opening the form pre-filled.\n   */\n  const handleEditClass = (cls) => {\n    setEditingClass(cls);\n    setFormOpen(true);\n  };\n\n  /**\n   * Saves the updated or newly created class to the Redux store.\n   * @param {Object} updatedClass - Class attributes including name, attributes, methods.\n   */\n  const handleSaveClass = (updatedClass) => {\n    if (editingClass) {\n      // Update existing class\n      dispatch(updateClass({ id: editingClass.id, ...updatedClass }));\n    } else {\n      // Create new class\n      dispatch(\n        addClass({\n          ...updatedClass,\n          id: Date.now().toString(),\n          x: 100,\n          y: 100,\n        })\n      );\n    }\n    setFormOpen(false);\n    setEditingClass(null);\n  };\n\n  /**\n   * Handles the drag end event to update a class's position in Redux.\n   * @param {string} id - Class identifier\n   * @param {Object} delta - Difference in x and y from initial position\n   */\n  const handleDragEnd = (id, delta) => {\n    const cls = classes.find((c) => c.id === id);\n    if (cls) {\n      dispatch(\n        updateClassPosition({\n          id,\n          x: cls.x + delta.x,\n          y: cls.y + delta.y,\n        })\n      );\n    }\n  };\n\n  /**\n   * Opens the form to add a new relation.\n   */\n  const handleAddRelation = () => {\n    setEditingRelation(null);\n    setRelationFormOpen(true);\n  };\n\n  /**\n   * Opens the form to edit an existing relation.\n   */\n  const handleEditRelation = (rel) => {\n    setEditingRelation(rel);\n    setRelationFormOpen(true);\n  };\n\n  /**\n   * Saves updated or newly created relations to Redux store.\n   */\n  const handleSaveRelation = (updatedRelation) => {\n    if (editingRelation) {\n      dispatch(updateRelation({ id: editingRelation.id, ...updatedRelation }));\n    } else {\n      dispatch(\n        addRelation({\n          ...updatedRelation,\n          id: Date.now().toString(),\n        })\n      );\n    }\n    setRelationFormOpen(false);\n    setEditingRelation(null);\n  };\n\n  /**\n   * Opens the form to add a new group.\n   */\n  const handleAddGroup = () => {\n    setEditingGroup(null);\n    setGroupFormOpen(true);\n  };\n\n  /**\n   * Opens the form to edit an existing group.\n   */\n  const handleEditGroup = (group) => {\n    setEditingGroup(group);\n    setGroupFormOpen(true);\n  };\n\n  /**\n   * Saves updated or newly created groups to Redux store.\n   */\n  const handleSaveGroup = (updatedGroup) => {\n    if (editingGroup) {\n      dispatch(updateGroup({ id: editingGroup.id, ...updatedGroup }));\n    } else {\n      dispatch(\n        addGroup({\n          ...updatedGroup,\n          id: Date.now().toString(),\n          members: [],\n          x: 50,\n          y: 50,\n        })\n      );\n    }\n    setGroupFormOpen(false);\n    setEditingGroup(null);\n  };\n\n  /**\n   * Generates Java code (basic skeleton) for all classes in the diagram.\n   * It shows the generated code in a dialog.\n   */\n  const handleGenerateCode = () => {\n    const code = generateCode(classes, relations, selectedLanguage);\n    setGeneratedCode(code);\n    setCodeDialogOpen(true);\n  };\n\n  return (\n    <Box sx={{ height: '100vh', display: 'flex', flexDirection: 'column' }}>\n      <EditorToolbar\n        darkMode={darkMode}\n        onToggleDarkMode={toggleDarkMode}\n        onZoomIn={handleZoomIn}\n        onZoomOut={handleZoomOut}\n        onAddClass={handleAddClass}\n        onAddRelation={handleAddRelation}\n        onAddGroup={handleAddGroup}\n        onGenerateCode={handleGenerateCode}\n        onUndo={() => dispatch(undo())}\n        onRedo={() => dispatch(redo())}\n        canUndo={past.length > 0}\n        canRedo={future.length > 0}\n      />\n\n      <Box\n        sx={{\n          flexGrow: 1,\n          position: \"relative\",\n          backgroundColor: darkMode ? \"#121212\" : \"#f0f0f0\",\n          overflow: \"auto\",\n          height: \"calc(100vh - 48px)\", // Account for toolbar height\n        }}\n      >\n        <Box\n          sx={{\n            transform: `scale(${zoom})`,\n            transformOrigin: \"0 0\",\n            transition: \"transform 0.2s ease-in-out\",\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        >\n          {/* Grid Pattern */}\n          <svg\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              width: \"100%\",\n              height: \"100%\",\n              pointerEvents: \"none\",\n              zIndex: 0,\n            }}\n          >\n            <defs>\n              <pattern\n                id=\"smallGrid\"\n                width=\"20\"\n                height=\"20\"\n                patternUnits=\"userSpaceOnUse\"\n              >\n                <path\n                  d=\"M 20 0 L 0 0 0 20\"\n                  fill=\"none\"\n                  stroke={darkMode ? \"#333\" : \"#eee\"}\n                  strokeWidth=\"0.5\"\n                />\n              </pattern>\n              <pattern\n                id=\"grid\"\n                width=\"100\"\n                height=\"100\"\n                patternUnits=\"userSpaceOnUse\"\n              >\n                <rect width=\"100\" height=\"100\" fill=\"url(#smallGrid)\" />\n                <path\n                  d=\"M 100 0 L 0 0 0 100\"\n                  fill=\"none\"\n                  stroke={darkMode ? \"#444\" : \"#e0e0e0\"}\n                  strokeWidth=\"1\"\n                />\n              </pattern>\n            </defs>\n            <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n          </svg>\n\n          {/* Relations Layer */}\n          <Box sx={{ position: 'relative', zIndex: 1 }}>\n            {relations.map((rel) => {\n              const sourceClass = classes.find((cls) => cls.id === rel.source);\n              const targetClass = classes.find((cls) => cls.id === rel.target);\n\n              if (!sourceClass || !targetClass) return null;\n\n              return (\n                <Relation\n                  key={rel.id}\n                  source={{ x: sourceClass.x, y: sourceClass.y }}\n                  target={{ x: targetClass.x, y: targetClass.y }}\n                  type={rel.type}\n                  sourceCardinality={rel.sourceCardinality}\n                  targetCardinality={rel.targetCardinality}\n                  classWidth={200}\n                  classHeight={100}\n                />\n              );\n            })}\n          </Box>\n\n          {/* Classes Layer */}\n          <Box sx={{ position: 'relative', zIndex: 2 }}>\n            {classes.map((cls) => (\n              <DraggableClass\n                key={cls.id}\n                id={cls.id}\n                name={cls.name}\n                x={cls.x}\n                y={cls.y}\n                attributes={cls.attributes}\n                methods={cls.methods}\n                deleteClass={(id) => dispatch(deleteClass(id))}\n                onEdit={() => handleEditClass(cls)}\n                onDragEnd={(delta) => handleDragEnd(cls.id, delta)}\n              />\n            ))}\n          </Box>\n        </Box>\n      </Box>\n\n      {/* Dialog: Add/Update Class */}\n      <ClassForm\n        open={formOpen}\n        handleClose={() => {\n          setFormOpen(false);\n          setEditingClass(null);\n        }}\n        handleSave={handleSaveClass}\n        initialData={editingClass}\n      />\n\n      {/* Dialog: Add/Update Relation */}\n      <RelationForm\n        open={relationFormOpen}\n        handleClose={() => {\n          setRelationFormOpen(false);\n          setEditingRelation(null);\n        }}\n        handleSave={handleSaveRelation}\n        initialData={editingRelation}\n      />\n\n      {/* Dialog: Add/Update Group */}\n      <GroupForm\n        open={groupFormOpen}\n        handleClose={() => {\n          setGroupFormOpen(false);\n          setEditingGroup(null);\n        }}\n        handleSave={handleSaveGroup}\n        initialData={editingGroup}\n      />\n\n      {/* Dialog: Display Generated Code */}\n      <Dialog\n        open={codeDialogOpen}\n        onClose={() => setCodeDialogOpen(false)}\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle>Generated Code</DialogTitle>\n        <DialogContent>\n          <Box sx={{ mb: 2 }}>\n            <TextField\n              select\n              label=\"Language\"\n              value={selectedLanguage}\n              onChange={(e) => {\n                setSelectedLanguage(e.target.value);\n                const newCode = generateCode(classes, relations, e.target.value);\n                setGeneratedCode(newCode);\n              }}\n              fullWidth\n              sx={{ mb: 2 }}\n            >\n              <MenuItem value=\"java\">Java</MenuItem>\n              <MenuItem value=\"php\">PHP</MenuItem>\n              <MenuItem value=\"python\">Python</MenuItem>\n            </TextField>\n          </Box>\n          <TextField\n            multiline\n            fullWidth\n            minRows={20}\n            variant=\"outlined\"\n            value={generatedCode}\n            InputProps={{\n              readOnly: true,\n              style: { fontFamily: 'monospace' }\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              navigator.clipboard.writeText(generatedCode);\n              alert('Code copied to clipboard!');\n            }}\n            color=\"primary\"\n          >\n            Copy\n          </Button>\n          <Button onClick={() => setCodeDialogOpen(false)} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n});\n\nexport default CanvasArea;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}