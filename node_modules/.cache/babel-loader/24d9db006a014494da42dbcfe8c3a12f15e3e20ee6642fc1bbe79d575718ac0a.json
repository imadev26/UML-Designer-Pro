{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IMADEV\\\\Documents\\\\umleditorvf\\\\src\\\\components\\\\UIComponents\\\\Relation.js\";\n/**\n * Relation Component\n * -------------------------------------\n * Draws a UML-style line from source class to target class.\n * Supported UML types:\n *   - generalization (triangle at target)\n *   - association (plain line)\n *   - aggregation (hollow diamond at source)\n *   - composition (filled diamond at source)\n *   - dependency (dashed line with open arrow at target)\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relation = ({\n  source,\n  target,\n  type,\n  cardinality,\n  classWidth = 200,\n  classHeight = 100\n}) => {\n  // Quick error check\n  if (!source || !target) {\n    console.error(\"Relation missing source or target coords:\", {\n      source,\n      target\n    });\n    return null;\n  }\n\n  // Calculate center coordinates for each class\n  const centerX1 = source.x + classWidth / 2;\n  const centerY1 = source.y + classHeight / 2;\n  const centerX2 = target.x + classWidth / 2;\n  const centerY2 = target.y + classHeight / 2;\n\n  // If they overlap exactly\n  const deltaX = centerX2 - centerX1;\n  const deltaY = centerY2 - centerY1;\n  const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  if (distance === 0) return null;\n\n  // Angle from source to target\n  const angle = Math.atan2(deltaY, deltaX);\n\n  // Shift the line to exit edges of the boxes\n  const offsetX = classWidth / 2 * Math.cos(angle);\n  const offsetY = classHeight / 2 * Math.sin(angle);\n  const finalStartX = centerX1 + offsetX;\n  const finalStartY = centerY1 + offsetY;\n  const finalEndX = centerX2 - offsetX;\n  const finalEndY = centerY2 - offsetY;\n\n  // By UML convention:\n  //   generalization => triangle arrow (target side)\n  //   association => plain line\n  //   aggregation => hollow diamond (source side)\n  //   composition => filled diamond (source side)\n  //   dependency => dashed line w/ open arrow (target side)\n\n  // Decide which markers to place on start vs. end\n  let markerStart = null;\n  let markerEnd = null;\n  let strokeDasharray = null;\n  switch (type) {\n    case \"generalization\":\n      // triangle arrow at target side\n      markerEnd = \"url(#umlTriangle)\";\n      break;\n    case \"aggregation\":\n      // hollow diamond at source\n      markerStart = \"url(#umlDiamondHollow)\";\n      break;\n    case \"composition\":\n      // filled diamond at source\n      markerStart = \"url(#umlDiamondFilled)\";\n      break;\n    case \"dependency\":\n      // dashed line with open arrow at target\n      markerEnd = \"url(#umlOpenArrow)\";\n      strokeDasharray = \"6, 3\";\n      break;\n    case \"association\":\n    default:\n      // plain line\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n      children: [/*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"umlTriangle\",\n        markerWidth: \"12\",\n        markerHeight: \"12\",\n        refX: \"12\",\n        refY: \"6\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M 0 0 L 12 6 L 0 12 z\",\n          fill: \"white\",\n          stroke: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"umlDiamondHollow\",\n        markerWidth: \"16\",\n        markerHeight: \"16\",\n        refX: \"0\",\n        refY: \"4\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M 0 4 L 4 2 L 8 4 L 4 6 Z\",\n          fill: \"white\",\n          stroke: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"umlDiamondFilled\",\n        markerWidth: \"16\",\n        markerHeight: \"16\",\n        refX: \"0\",\n        refY: \"4\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M 0 4 L 4 2 L 8 4 L 4 6 Z\",\n          fill: \"black\",\n          stroke: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"umlOpenArrow\",\n        markerWidth: \"12\",\n        markerHeight: \"12\",\n        refX: \"12\",\n        refY: \"6\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M 0 0 L 12 6 L 0 12\",\n          fill: \"none\",\n          stroke: \"black\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: finalStartX,\n      y1: finalStartY,\n      x2: finalEndX,\n      y2: finalEndY,\n      stroke: \"black\",\n      strokeWidth: \"2\",\n      markerStart: markerStart,\n      markerEnd: markerEnd,\n      strokeDasharray: strokeDasharray || \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), cardinality && /*#__PURE__*/_jsxDEV(\"text\", {\n      x: (finalStartX + finalEndX) / 2,\n      y: (finalStartY + finalEndY) / 2 - 4,\n      textAnchor: \"middle\",\n      fontSize: \"12\",\n      fill: \"black\",\n      style: {\n        userSelect: \"none\"\n      },\n      children: cardinality\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c = Relation;\nRelation.propTypes = {\n  source: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }).isRequired,\n  target: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }).isRequired,\n  type: PropTypes.oneOf([\"association\", \"aggregation\", \"composition\", \"generalization\", \"dependency\"]).isRequired,\n  cardinality: PropTypes.string,\n  classWidth: PropTypes.number,\n  classHeight: PropTypes.number\n};\nexport default Relation;\nvar _c;\n$RefreshReg$(_c, \"Relation\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Relation","source","target","type","cardinality","classWidth","classHeight","console","error","centerX1","x","centerY1","y","centerX2","centerY2","deltaX","deltaY","distance","Math","sqrt","angle","atan2","offsetX","cos","offsetY","sin","finalStartX","finalStartY","finalEndX","finalEndY","markerStart","markerEnd","strokeDasharray","style","position","pointerEvents","top","left","width","height","children","id","markerWidth","markerHeight","refX","refY","orient","d","fill","stroke","fileName","_jsxFileName","lineNumber","columnNumber","strokeWidth","x1","y1","x2","y2","textAnchor","fontSize","userSelect","_c","propTypes","shape","number","isRequired","oneOf","string","$RefreshReg$"],"sources":["C:/Users/IMADEV/Documents/umleditorvf/src/components/UIComponents/Relation.js"],"sourcesContent":["/**\n * Relation Component\n * -------------------------------------\n * Draws a UML-style line from source class to target class.\n * Supported UML types:\n *   - generalization (triangle at target)\n *   - association (plain line)\n *   - aggregation (hollow diamond at source)\n *   - composition (filled diamond at source)\n *   - dependency (dashed line with open arrow at target)\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Relation = ({\n  source,\n  target,\n  type,\n  cardinality,\n  classWidth = 200,\n  classHeight = 100,\n}) => {\n  // Quick error check\n  if (!source || !target) {\n    console.error(\"Relation missing source or target coords:\", { source, target });\n    return null;\n  }\n\n  // Calculate center coordinates for each class\n  const centerX1 = source.x + classWidth / 2;\n  const centerY1 = source.y + classHeight / 2;\n  const centerX2 = target.x + classWidth / 2;\n  const centerY2 = target.y + classHeight / 2;\n\n  // If they overlap exactly\n  const deltaX = centerX2 - centerX1;\n  const deltaY = centerY2 - centerY1;\n  const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  if (distance === 0) return null;\n\n  // Angle from source to target\n  const angle = Math.atan2(deltaY, deltaX);\n\n  // Shift the line to exit edges of the boxes\n  const offsetX = (classWidth / 2) * Math.cos(angle);\n  const offsetY = (classHeight / 2) * Math.sin(angle);\n\n  const finalStartX = centerX1 + offsetX;\n  const finalStartY = centerY1 + offsetY;\n  const finalEndX = centerX2 - offsetX;\n  const finalEndY = centerY2 - offsetY;\n\n  // By UML convention:\n  //   generalization => triangle arrow (target side)\n  //   association => plain line\n  //   aggregation => hollow diamond (source side)\n  //   composition => filled diamond (source side)\n  //   dependency => dashed line w/ open arrow (target side)\n\n  // Decide which markers to place on start vs. end\n  let markerStart = null;\n  let markerEnd = null;\n  let strokeDasharray = null;\n\n  switch (type) {\n    case \"generalization\":\n      // triangle arrow at target side\n      markerEnd = \"url(#umlTriangle)\";\n      break;\n\n    case \"aggregation\":\n      // hollow diamond at source\n      markerStart = \"url(#umlDiamondHollow)\";\n      break;\n\n    case \"composition\":\n      // filled diamond at source\n      markerStart = \"url(#umlDiamondFilled)\";\n      break;\n\n    case \"dependency\":\n      // dashed line with open arrow at target\n      markerEnd = \"url(#umlOpenArrow)\";\n      strokeDasharray = \"6, 3\";\n      break;\n\n    case \"association\":\n    default:\n      // plain line\n      break;\n  }\n\n  return (\n    <svg\n      style={{\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <defs>\n        {/* Triangle marker for generalization */}\n        <marker\n          id=\"umlTriangle\"\n          markerWidth=\"12\"\n          markerHeight=\"12\"\n          refX=\"12\"\n          refY=\"6\"\n          orient=\"auto\"\n        >\n          <path d=\"M 0 0 L 12 6 L 0 12 z\" fill=\"white\" stroke=\"black\" />\n        </marker>\n\n        {/* Hollow diamond marker for aggregation */}\n        <marker\n          id=\"umlDiamondHollow\"\n          markerWidth=\"16\"\n          markerHeight=\"16\"\n          refX=\"0\"\n          refY=\"4\"\n          orient=\"auto\"\n        >\n          <path\n            d=\"M 0 4 L 4 2 L 8 4 L 4 6 Z\"\n            fill=\"white\"\n            stroke=\"black\"\n          />\n        </marker>\n\n        {/* Filled diamond marker for composition */}\n        <marker\n          id=\"umlDiamondFilled\"\n          markerWidth=\"16\"\n          markerHeight=\"16\"\n          refX=\"0\"\n          refY=\"4\"\n          orient=\"auto\"\n        >\n          <path\n            d=\"M 0 4 L 4 2 L 8 4 L 4 6 Z\"\n            fill=\"black\"\n            stroke=\"black\"\n          />\n        </marker>\n\n        {/* Open arrow marker for dependency */}\n        <marker\n          id=\"umlOpenArrow\"\n          markerWidth=\"12\"\n          markerHeight=\"12\"\n          refX=\"12\"\n          refY=\"6\"\n          orient=\"auto\"\n        >\n          <path\n            d=\"M 0 0 L 12 6 L 0 12\"\n            fill=\"none\"\n            stroke=\"black\"\n            strokeWidth=\"1\"\n          />\n        </marker>\n      </defs>\n\n      {/* Main line */}\n      <line\n        x1={finalStartX}\n        y1={finalStartY}\n        x2={finalEndX}\n        y2={finalEndY}\n        stroke=\"black\"\n        strokeWidth=\"2\"\n        markerStart={markerStart}\n        markerEnd={markerEnd}\n        strokeDasharray={strokeDasharray || \"0\"}\n      />\n\n      {/* If desired, show a single cardinality near the midpoint */}\n      {cardinality && (\n        <text\n          x={(finalStartX + finalEndX) / 2}\n          y={(finalStartY + finalEndY) / 2 - 4}\n          textAnchor=\"middle\"\n          fontSize=\"12\"\n          fill=\"black\"\n          style={{ userSelect: \"none\" }}\n        >\n          {cardinality}\n        </text>\n      )}\n    </svg>\n  );\n};\n\nRelation.propTypes = {\n  source: PropTypes.shape({ x: PropTypes.number, y: PropTypes.number }).isRequired,\n  target: PropTypes.shape({ x: PropTypes.number, y: PropTypes.number }).isRequired,\n  type: PropTypes.oneOf([\n    \"association\",\n    \"aggregation\",\n    \"composition\",\n    \"generalization\",\n    \"dependency\",\n  ]).isRequired,\n  cardinality: PropTypes.string,\n  classWidth: PropTypes.number,\n  classHeight: PropTypes.number,\n};\n\nexport default Relation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}