{"ast":null,"code":"// src/redux/editorSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  classes: [],\n  relations: [],\n  groups: [],\n  past: [],\n  future: []\n};\nconst editorSlice = createSlice({\n  name: \"editor\",\n  initialState,\n  reducers: {\n    // Classes\n    addClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes.push(action.payload);\n      state.future = [];\n    },\n    deleteClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes = state.classes.filter(cls => cls.id !== action.payload);\n      state.relations = state.relations.filter(rel => rel.source !== action.payload && rel.target !== action.payload);\n      state.future = [];\n    },\n    updateClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.classes.findIndex(cls => cls.id === action.payload.id);\n      if (index !== -1) {\n        state.classes[index] = {\n          ...state.classes[index],\n          ...action.payload\n        };\n      }\n      state.future = [];\n    },\n    updateClassPosition: (state, action) => {\n      const index = state.classes.findIndex(cls => cls.id === action.payload.id);\n      if (index !== -1) {\n        state.classes[index].x = action.payload.x;\n        state.classes[index].y = action.payload.y;\n      }\n    },\n    // Relations\n    addRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.relations.push(action.payload);\n      state.future = [];\n    },\n    deleteRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.relations = state.relations.filter(rel => rel.id !== action.payload);\n      state.future = [];\n    },\n    updateRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.relations.findIndex(rel => rel.id === action.payload.id);\n      if (index !== -1) {\n        state.relations[index] = {\n          ...state.relations[index],\n          ...action.payload\n        };\n      }\n      state.future = [];\n    },\n    // Groupes\n    addGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.groups.push(action.payload);\n      state.future = [];\n    },\n    removeGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.groups = state.groups.filter(group => group.id !== action.payload);\n      state.future = [];\n    },\n    updateGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.groups.findIndex(group => group.id === action.payload.id);\n      if (index !== -1) {\n        state.groups[index] = {\n          ...state.groups[index],\n          ...action.payload\n        };\n      }\n      state.future = [];\n    },\n    // Undo/Redo\n    undo: state => {\n      if (state.past.length > 0) {\n        const previousState = state.past.pop();\n        state.future.push(JSON.parse(JSON.stringify(state)));\n        Object.assign(state, previousState);\n      }\n    },\n    redo: state => {\n      if (state.future.length > 0) {\n        const nextState = state.future.pop();\n        state.past.push(JSON.parse(JSON.stringify(state)));\n        Object.assign(state, nextState);\n      }\n    },\n    // Réinitialiser le diagramme\n    resetDiagram: state => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes = [];\n      state.relations = [];\n      state.groups = [];\n      state.future = [];\n    }\n  }\n});\nexport const {\n  addClass,\n  deleteClass,\n  updateClass,\n  updateClassPosition,\n  addRelation,\n  deleteRelation,\n  updateRelation,\n  addGroup,\n  removeGroup,\n  updateGroup,\n  undo,\n  redo,\n  resetDiagram\n} = editorSlice.actions;\nexport default editorSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","classes","relations","groups","past","future","editorSlice","name","reducers","addClass","state","action","push","JSON","parse","stringify","payload","deleteClass","filter","cls","id","rel","source","target","updateClass","index","findIndex","updateClassPosition","x","y","addRelation","deleteRelation","updateRelation","addGroup","removeGroup","group","updateGroup","undo","length","previousState","pop","Object","assign","redo","nextState","resetDiagram","actions","reducer"],"sources":["C:/Users/IMADEV/Documents/umleditorvf/src/redux/editorSlice.js"],"sourcesContent":["// src/redux/editorSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  classes: [],\n  relations: [],\n  groups: [],\n  past: [],\n  future: [],\n};\n\nconst editorSlice = createSlice({\n  name: \"editor\",\n  initialState,\n  reducers: {\n    // Classes\n    addClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes.push(action.payload);\n      state.future = [];\n    },\n    deleteClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes = state.classes.filter((cls) => cls.id !== action.payload);\n      state.relations = state.relations.filter(\n        (rel) => rel.source !== action.payload && rel.target !== action.payload\n      );\n      state.future = [];\n    },\n    updateClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.classes.findIndex((cls) => cls.id === action.payload.id);\n      if (index !== -1) {\n        state.classes[index] = { ...state.classes[index], ...action.payload };\n      }\n      state.future = [];\n    },\n    updateClassPosition: (state, action) => {\n      const index = state.classes.findIndex((cls) => cls.id === action.payload.id);\n      if (index !== -1) {\n        state.classes[index].x = action.payload.x;\n        state.classes[index].y = action.payload.y;\n      }\n    },\n\n    // Relations\n    addRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.relations.push(action.payload);\n      state.future = [];\n    },\n    deleteRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.relations = state.relations.filter((rel) => rel.id !== action.payload);\n      state.future = [];\n    },\n    updateRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.relations.findIndex((rel) => rel.id === action.payload.id);\n      if (index !== -1) {\n        state.relations[index] = { ...state.relations[index], ...action.payload };\n      }\n      state.future = [];\n    },\n\n    // Groupes\n    addGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.groups.push(action.payload);\n      state.future = [];\n    },\n    removeGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.groups = state.groups.filter((group) => group.id !== action.payload);\n      state.future = [];\n    },\n    updateGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.groups.findIndex((group) => group.id === action.payload.id);\n      if (index !== -1) {\n        state.groups[index] = { ...state.groups[index], ...action.payload };\n      }\n      state.future = [];\n    },\n\n    // Undo/Redo\n    undo: (state) => {\n      if (state.past.length > 0) {\n        const previousState = state.past.pop();\n        state.future.push(JSON.parse(JSON.stringify(state)));\n        Object.assign(state, previousState);\n      }\n    },\n    redo: (state) => {\n      if (state.future.length > 0) {\n        const nextState = state.future.pop();\n        state.past.push(JSON.parse(JSON.stringify(state)));\n        Object.assign(state, nextState);\n      }\n    },\n\n    // Réinitialiser le diagramme\n    resetDiagram: (state) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes = [];\n      state.relations = [];\n      state.groups = [];\n      state.future = [];\n    },\n  },\n});\n\nexport const {\n  addClass,\n  deleteClass,\n  updateClass,\n  updateClassPosition,\n  addRelation,\n  deleteRelation,\n  updateRelation,\n  addGroup,\n  removeGroup,\n  updateGroup,\n  undo,\n  redo,\n  resetDiagram,\n} = editorSlice.actions;\n\nexport default editorSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}