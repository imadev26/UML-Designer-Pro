{"ast":null,"code":"// src/redux/editorSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  classes: [],\n  relations: [],\n  groups: [],\n  past: [],\n  future: []\n};\nconst editorSlice = createSlice({\n  name: \"editor\",\n  initialState,\n  reducers: {\n    // Classes\n    addClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes.push(action.payload);\n      state.future = [];\n    },\n    deleteClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes = state.classes.filter(cls => cls.id !== action.payload);\n      state.relations = state.relations.filter(rel => rel.source !== action.payload && rel.target !== action.payload);\n      state.future = [];\n    },\n    updateClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.classes.findIndex(cls => cls.id === action.payload.id);\n      if (index !== -1) {\n        state.classes[index] = {\n          ...state.classes[index],\n          ...action.payload\n        };\n      }\n      state.future = [];\n    },\n    updateClassPosition: (state, action) => {\n      const index = state.classes.findIndex(cls => cls.id === action.payload.id);\n      if (index !== -1) {\n        state.classes[index].x = action.payload.x;\n        state.classes[index].y = action.payload.y;\n      }\n    },\n    // Relations\n    addRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      // Check if relation already exists between these classes\n      const existingRelation = state.relations.find(rel => rel.source === action.payload.source && rel.target === action.payload.target || rel.source === action.payload.target && rel.target === action.payload.source);\n      if (existingRelation) {\n        // Update existing relation instead of adding new one\n        existingRelation.type = action.payload.type;\n        existingRelation.sourceCardinality = action.payload.sourceCardinality;\n        existingRelation.targetCardinality = action.payload.targetCardinality;\n      } else {\n        // Add new relation\n        state.relations.push({\n          ...action.payload,\n          id: Date.now().toString()\n        });\n      }\n      state.future = [];\n    },\n    deleteRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.relations = state.relations.filter(rel => rel.id !== action.payload);\n      state.future = [];\n    },\n    updateRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.relations.findIndex(rel => rel.id === action.payload.id);\n      if (index !== -1) {\n        state.relations[index] = {\n          ...state.relations[index],\n          ...action.payload\n        };\n      }\n      state.future = [];\n    },\n    // Groupes\n    addGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.groups.push(action.payload);\n      state.future = [];\n    },\n    removeGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.groups = state.groups.filter(group => group.id !== action.payload);\n      state.future = [];\n    },\n    updateGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.groups.findIndex(group => group.id === action.payload.id);\n      if (index !== -1) {\n        state.groups[index] = {\n          ...state.groups[index],\n          ...action.payload\n        };\n      }\n      state.future = [];\n    },\n    // Undo/Redo\n    undo: state => {\n      if (state.past.length > 0) {\n        const previous = state.past[state.past.length - 1];\n        state.future.push(JSON.parse(JSON.stringify(state)));\n        state.past.pop();\n        return previous;\n      }\n    },\n    redo: state => {\n      if (state.future.length > 0) {\n        const next = state.future[state.future.length - 1];\n        state.past.push(JSON.parse(JSON.stringify(state)));\n        state.future.pop();\n        return next;\n      }\n    },\n    // Réinitialiser le diagramme\n    resetDiagram: state => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes = [];\n      state.relations = [];\n      state.groups = [];\n      state.future = [];\n    }\n  }\n});\nexport const {\n  addClass,\n  deleteClass,\n  updateClass,\n  updateClassPosition,\n  addRelation,\n  deleteRelation,\n  updateRelation,\n  addGroup,\n  removeGroup,\n  updateGroup,\n  undo,\n  redo,\n  resetDiagram\n} = editorSlice.actions;\nexport default editorSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","classes","relations","groups","past","future","editorSlice","name","reducers","addClass","state","action","push","JSON","parse","stringify","payload","deleteClass","filter","cls","id","rel","source","target","updateClass","index","findIndex","updateClassPosition","x","y","addRelation","existingRelation","find","type","sourceCardinality","targetCardinality","Date","now","toString","deleteRelation","updateRelation","addGroup","removeGroup","group","updateGroup","undo","length","previous","pop","redo","next","resetDiagram","actions","reducer"],"sources":["C:/Users/IMADEV/Documents/umleditorvf/src/redux/editorSlice.js"],"sourcesContent":["// src/redux/editorSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  classes: [],\n  relations: [],\n  groups: [],\n  past: [],\n  future: [],\n};\n\nconst editorSlice = createSlice({\n  name: \"editor\",\n  initialState,\n  reducers: {\n    // Classes\n    addClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes.push(action.payload);\n      state.future = [];\n    },\n    deleteClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes = state.classes.filter((cls) => cls.id !== action.payload);\n      state.relations = state.relations.filter(\n        (rel) => rel.source !== action.payload && rel.target !== action.payload\n      );\n      state.future = [];\n    },\n    updateClass: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.classes.findIndex((cls) => cls.id === action.payload.id);\n      if (index !== -1) {\n        state.classes[index] = { ...state.classes[index], ...action.payload };\n      }\n      state.future = [];\n    },\n    updateClassPosition: (state, action) => {\n      const index = state.classes.findIndex((cls) => cls.id === action.payload.id);\n      if (index !== -1) {\n        state.classes[index].x = action.payload.x;\n        state.classes[index].y = action.payload.y;\n      }\n    },\n\n    // Relations\n    addRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      // Check if relation already exists between these classes\n      const existingRelation = state.relations.find(\n        rel => \n          (rel.source === action.payload.source && rel.target === action.payload.target) ||\n          (rel.source === action.payload.target && rel.target === action.payload.source)\n      );\n\n      if (existingRelation) {\n        // Update existing relation instead of adding new one\n        existingRelation.type = action.payload.type;\n        existingRelation.sourceCardinality = action.payload.sourceCardinality;\n        existingRelation.targetCardinality = action.payload.targetCardinality;\n      } else {\n        // Add new relation\n        state.relations.push({\n          ...action.payload,\n          id: Date.now().toString(),\n        });\n      }\n      state.future = [];\n    },\n    deleteRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.relations = state.relations.filter((rel) => rel.id !== action.payload);\n      state.future = [];\n    },\n    updateRelation: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.relations.findIndex(rel => rel.id === action.payload.id);\n      if (index !== -1) {\n        state.relations[index] = {\n          ...state.relations[index],\n          ...action.payload,\n        };\n      }\n      state.future = [];\n    },\n\n    // Groupes\n    addGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.groups.push(action.payload);\n      state.future = [];\n    },\n    removeGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.groups = state.groups.filter((group) => group.id !== action.payload);\n      state.future = [];\n    },\n    updateGroup: (state, action) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      const index = state.groups.findIndex((group) => group.id === action.payload.id);\n      if (index !== -1) {\n        state.groups[index] = { ...state.groups[index], ...action.payload };\n      }\n      state.future = [];\n    },\n\n    // Undo/Redo\n    undo: (state) => {\n      if (state.past.length > 0) {\n        const previous = state.past[state.past.length - 1];\n        state.future.push(JSON.parse(JSON.stringify(state)));\n        state.past.pop();\n        return previous;\n      }\n    },\n    redo: (state) => {\n      if (state.future.length > 0) {\n        const next = state.future[state.future.length - 1];\n        state.past.push(JSON.parse(JSON.stringify(state)));\n        state.future.pop();\n        return next;\n      }\n    },\n\n    // Réinitialiser le diagramme\n    resetDiagram: (state) => {\n      state.past.push(JSON.parse(JSON.stringify(state)));\n      state.classes = [];\n      state.relations = [];\n      state.groups = [];\n      state.future = [];\n    },\n  },\n});\n\nexport const {\n  addClass,\n  deleteClass,\n  updateClass,\n  updateClassPosition,\n  addRelation,\n  deleteRelation,\n  updateRelation,\n  addGroup,\n  removeGroup,\n  updateGroup,\n  undo,\n  redo,\n  resetDiagram,\n} = editorSlice.actions;\n\nexport default editorSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}