{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IMADEV\\\\Documents\\\\umleditorvf\\\\src\\\\components\\\\UIComponents\\\\GroupForm.js\",\n  _s = $RefreshSig$();\n// src/components/UIComponents/GroupForm.js\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Box, Typography, Checkbox, FormControlLabel, FormGroup, Grid } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * GroupForm Component\n * -------------------------------------\n * Dialog for adding or modifying a group of classes.\n * The user chooses a group name and selects which classes belong to it.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupForm = ({\n  open,\n  handleClose,\n  handleSave,\n  initialData\n}) => {\n  _s();\n  // Pull all classes to display checkboxes\n  const classes = useSelector(state => state.editor.classes);\n  const [name, setName] = useState(\"\");\n  const [selectedMembers, setSelectedMembers] = useState([]);\n\n  // If editing, fill fields\n  useEffect(() => {\n    if (initialData) {\n      setName(initialData.name);\n      setSelectedMembers(initialData.members);\n    } else {\n      setName(\"\");\n      setSelectedMembers([]);\n    }\n  }, [initialData]);\n\n  /**\n   * Handles toggling membership of a class in the selectedMembers array\n   * @param {string} id - The ID of the class to toggle\n   */\n  const handleToggleMember = id => {\n    if (selectedMembers.includes(id)) {\n      setSelectedMembers(selectedMembers.filter(memberId => memberId !== id));\n    } else {\n      setSelectedMembers([...selectedMembers, id]);\n    }\n  };\n\n  /**\n   * Validates form fields and calls handleSave with the result\n   */\n  const onSave = () => {\n    if (name.trim() === \"\") {\n      alert(\"Le nom du groupe ne peut pas être vide.\");\n      return;\n    }\n    if (selectedMembers.length === 0) {\n      alert(\"Le groupe doit avoir au moins un membre.\");\n      return;\n    }\n    const groupData = {\n      name,\n      members: selectedMembers\n    };\n    handleSave(groupData);\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: initialData ? \"Modifier Groupe\" : \"Ajouter Groupe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Nom du Groupe\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Membres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: classes.map(cls => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedMembers.includes(cls.id),\n                  onChange: () => handleToggleMember(cls.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this),\n                label: cls.name\n              }, cls.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"inherit\",\n        children: \"Annuler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSave,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Sauvegarder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupForm, \"rVudRHUYO3M+yHRyq/mFXPQb3wY=\", false, function () {\n  return [useSelector];\n});\n_c = GroupForm;\nexport default GroupForm;\nvar _c;\n$RefreshReg$(_c, \"GroupForm\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Box","Typography","Checkbox","FormControlLabel","FormGroup","Grid","useSelector","jsxDEV","_jsxDEV","GroupForm","open","handleClose","handleSave","initialData","_s","classes","state","editor","name","setName","selectedMembers","setSelectedMembers","members","handleToggleMember","id","includes","filter","memberId","onSave","trim","alert","length","groupData","onClose","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","container","spacing","item","xs","label","value","onChange","e","target","required","variant","map","cls","control","checked","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/IMADEV/Documents/umleditorvf/src/components/UIComponents/GroupForm.js"],"sourcesContent":["// src/components/UIComponents/GroupForm.js\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Box,\n  Typography,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * GroupForm Component\n * -------------------------------------\n * Dialog for adding or modifying a group of classes.\n * The user chooses a group name and selects which classes belong to it.\n */\n\nconst GroupForm = ({ open, handleClose, handleSave, initialData }) => {\n  // Pull all classes to display checkboxes\n  const classes = useSelector((state) => state.editor.classes);\n\n  const [name, setName] = useState(\"\");\n  const [selectedMembers, setSelectedMembers] = useState([]);\n\n  // If editing, fill fields\n  useEffect(() => {\n    if (initialData) {\n      setName(initialData.name);\n      setSelectedMembers(initialData.members);\n    } else {\n      setName(\"\");\n      setSelectedMembers([]);\n    }\n  }, [initialData]);\n\n  /**\n   * Handles toggling membership of a class in the selectedMembers array\n   * @param {string} id - The ID of the class to toggle\n   */\n  const handleToggleMember = (id) => {\n    if (selectedMembers.includes(id)) {\n      setSelectedMembers(selectedMembers.filter((memberId) => memberId !== id));\n    } else {\n      setSelectedMembers([...selectedMembers, id]);\n    }\n  };\n\n  /**\n   * Validates form fields and calls handleSave with the result\n   */\n  const onSave = () => {\n    if (name.trim() === \"\") {\n      alert(\"Le nom du groupe ne peut pas être vide.\");\n      return;\n    }\n\n    if (selectedMembers.length === 0) {\n      alert(\"Le groupe doit avoir au moins un membre.\");\n      return;\n    }\n\n    const groupData = {\n      name,\n      members: selectedMembers,\n    };\n\n    handleSave(groupData);\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>{initialData ? \"Modifier Groupe\" : \"Ajouter Groupe\"}</DialogTitle>\n      <DialogContent>\n        <Box sx={{ mt: 1 }}>\n          <Grid container spacing={2}>\n            {/* Group name */}\n            <Grid item xs={12}>\n              <TextField\n                label=\"Nom du Groupe\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n                fullWidth\n              />\n            </Grid>\n\n            {/* Members checkboxes */}\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">Membres</Typography>\n              <FormGroup>\n                {classes.map((cls) => (\n                  <FormControlLabel\n                    key={cls.id}\n                    control={\n                      <Checkbox\n                        checked={selectedMembers.includes(cls.id)}\n                        onChange={() => handleToggleMember(cls.id)}\n                      />\n                    }\n                    label={cls.name}\n                  />\n                ))}\n              </FormGroup>\n            </Grid>\n          </Grid>\n        </Box>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\">\n          Annuler\n        </Button>\n        <Button onClick={onSave} variant=\"contained\" color=\"primary\">\n          Sauvegarder\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default GroupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}